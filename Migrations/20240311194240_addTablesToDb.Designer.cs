// <auto-generated />
using System;
using AzamAfridi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzamAfridi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240311194240_addTablesToDb")]
    partial class addTablesToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AzamAfridi.Models.RouteDetail", b =>
                {
                    b.Property<int>("RouteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteID"));

                    b.Property<string>("BuiltyNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FromFare")
                        .HasColumnType("float");

                    b.Property<string>("FromStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ToFare")
                        .HasColumnType("float");

                    b.Property<string>("ToStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalExpense")
                        .HasColumnType("float");

                    b.Property<double>("TotalFare")
                        .HasColumnType("float");

                    b.Property<double>("TotalIncome")
                        .HasColumnType("float");

                    b.Property<string>("TruckNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("RouteID", "BuiltyNo");

                    b.ToTable("RouteDetails");
                });

            modelBuilder.Entity("AzamAfridi.Models.StationName", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("StationNames");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            StationCode = "LHR",
                            StationDescription = "Lahore"
                        },
                        new
                        {
                            StationId = 2,
                            StationCode = "KHI",
                            StationDescription = "Karachi"
                        },
                        new
                        {
                            StationId = 3,
                            StationCode = "GUJ",
                            StationDescription = "Gujrawala"
                        },
                        new
                        {
                            StationId = 4,
                            StationCode = "MLT",
                            StationDescription = "Multan"
                        },
                        new
                        {
                            StationId = 5,
                            StationCode = "PESH",
                            StationDescription = "Peshawar"
                        },
                        new
                        {
                            StationId = 6,
                            StationCode = "MUR",
                            StationDescription = "Murree"
                        },
                        new
                        {
                            StationId = 7,
                            StationCode = "KHT",
                            StationDescription = "Kohat"
                        },
                        new
                        {
                            StationId = 8,
                            StationCode = "SHK",
                            StationDescription = "Sheikhapura"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
