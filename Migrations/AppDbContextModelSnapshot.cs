// <auto-generated />
using System;
using AzamAfridi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AzamAfridi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AzamAfridi.Models.ExpenseOnRoute", b =>
                {
                    b.Property<int>("ExpenseOnRouteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseOnRouteID"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expense_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("RouteDetailBuiltyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RouteDetailRouteID")
                        .HasColumnType("int");

                    b.Property<int>("RouteID")
                        .HasColumnType("int");

                    b.HasKey("ExpenseOnRouteID");

                    b.HasIndex("ExpenseTypeId");

                    b.HasIndex("RouteDetailRouteID", "RouteDetailBuiltyNo");

                    b.ToTable("ExpenseOnRoutes");
                });

            modelBuilder.Entity("AzamAfridi.Models.ExpenseType", b =>
                {
                    b.Property<int>("ExpenseTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseTypeId"));

                    b.Property<string>("ExpenseTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpenseTypeDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsExpenseType")
                        .HasColumnType("bit");

                    b.HasKey("ExpenseTypeId");

                    b.ToTable("ExpenseTypes");

                    b.HasData(
                        new
                        {
                            ExpenseTypeId = 1,
                            ExpenseTypeCode = "Diesel-Lit",
                            ExpenseTypeDescription = "Diesel Litter",
                            IsExpenseType = false
                        },
                        new
                        {
                            ExpenseTypeId = 2,
                            ExpenseTypeCode = "Fix-Chrg",
                            ExpenseTypeDescription = "Fixed Charges",
                            IsExpenseType = false
                        },
                        new
                        {
                            ExpenseTypeId = 3,
                            ExpenseTypeCode = "TollTax",
                            ExpenseTypeDescription = "Toll Tax",
                            IsExpenseType = false
                        });
                });

            modelBuilder.Entity("AzamAfridi.Models.RouteDetail", b =>
                {
                    b.Property<int>("RouteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RouteID"));

                    b.Property<string>("BuiltyNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DriveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FromFare")
                        .HasColumnType("float");

                    b.Property<string>("FromStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Isbuilty")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Return_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Return_FromStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Return_ToStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Return_Weight")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("ToFare")
                        .HasColumnType("float");

                    b.Property<string>("ToStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalExpense")
                        .HasColumnType("float");

                    b.Property<double>("TotalFare")
                        .HasColumnType("float");

                    b.Property<double>("TotalIncome")
                        .HasColumnType("float");

                    b.Property<double>("TotalMaintance")
                        .HasColumnType("float");

                    b.Property<string>("TruckNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("RouteID", "BuiltyNo");

                    b.ToTable("RouteDetails");
                });

            modelBuilder.Entity("AzamAfridi.Models.StationName", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<bool>("IsStation")
                        .HasColumnType("bit");

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StationId");

                    b.ToTable("StationNames");

                    b.HasData(
                        new
                        {
                            StationId = 1,
                            IsStation = false,
                            StationCode = "LHR",
                            StationDescription = "Lahore"
                        },
                        new
                        {
                            StationId = 2,
                            IsStation = false,
                            StationCode = "KHI",
                            StationDescription = "Karachi"
                        },
                        new
                        {
                            StationId = 3,
                            IsStation = false,
                            StationCode = "GUJ",
                            StationDescription = "Gujrawala"
                        },
                        new
                        {
                            StationId = 4,
                            IsStation = false,
                            StationCode = "MLT",
                            StationDescription = "Multan"
                        },
                        new
                        {
                            StationId = 5,
                            IsStation = false,
                            StationCode = "PESH",
                            StationDescription = "Peshawar"
                        },
                        new
                        {
                            StationId = 6,
                            IsStation = false,
                            StationCode = "MUR",
                            StationDescription = "Murree"
                        },
                        new
                        {
                            StationId = 7,
                            IsStation = false,
                            StationCode = "KHT",
                            StationDescription = "Kohat"
                        },
                        new
                        {
                            StationId = 8,
                            IsStation = false,
                            StationCode = "SHK",
                            StationDescription = "Sheikhapura"
                        });
                });

            modelBuilder.Entity("AzamAfridi.Models.Vehicle_Maintance", b =>
                {
                    b.Property<int>("VehicleMaintanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleMaintanceId"));

                    b.Property<DateTime>("Maintance_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Maintance_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Maintance_Price")
                        .HasColumnType("float");

                    b.Property<string>("RouteDetailBuiltyNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RouteDetailRouteID")
                        .HasColumnType("int");

                    b.Property<int>("RouteID")
                        .HasColumnType("int");

                    b.HasKey("VehicleMaintanceId");

                    b.HasIndex("RouteDetailRouteID", "RouteDetailBuiltyNo");

                    b.ToTable("Maintance_Vehicles");
                });

            modelBuilder.Entity("AzamAfridi.Models.ExpenseOnRoute", b =>
                {
                    b.HasOne("AzamAfridi.Models.ExpenseType", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AzamAfridi.Models.RouteDetail", "RouteDetail")
                        .WithMany("Expenses")
                        .HasForeignKey("RouteDetailRouteID", "RouteDetailBuiltyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseType");

                    b.Navigation("RouteDetail");
                });

            modelBuilder.Entity("AzamAfridi.Models.Vehicle_Maintance", b =>
                {
                    b.HasOne("AzamAfridi.Models.RouteDetail", "RouteDetail")
                        .WithMany("Vehicles")
                        .HasForeignKey("RouteDetailRouteID", "RouteDetailBuiltyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RouteDetail");
                });

            modelBuilder.Entity("AzamAfridi.Models.RouteDetail", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
